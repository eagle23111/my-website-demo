/*
 * This file is generated by jOOQ.
 */
package jooqdata.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Customer implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String customerCode;
    private final String customerName;
    private final String customerInn;
    private final String customerKpp;
    private final String customerLegalAddress;
    private final String customerPostalAddress;
    private final String customerEmail;
    private final String customerCodeMain;
    private final Boolean isOrganization;
    private final Boolean isPerson;

    public Customer(Customer value) {
        this.customerCode = value.customerCode;
        this.customerName = value.customerName;
        this.customerInn = value.customerInn;
        this.customerKpp = value.customerKpp;
        this.customerLegalAddress = value.customerLegalAddress;
        this.customerPostalAddress = value.customerPostalAddress;
        this.customerEmail = value.customerEmail;
        this.customerCodeMain = value.customerCodeMain;
        this.isOrganization = value.isOrganization;
        this.isPerson = value.isPerson;
    }

    public Customer(
        String customerCode,
        String customerName,
        String customerInn,
        String customerKpp,
        String customerLegalAddress,
        String customerPostalAddress,
        String customerEmail,
        String customerCodeMain,
        Boolean isOrganization,
        Boolean isPerson
    ) {
        this.customerCode = customerCode;
        this.customerName = customerName;
        this.customerInn = customerInn;
        this.customerKpp = customerKpp;
        this.customerLegalAddress = customerLegalAddress;
        this.customerPostalAddress = customerPostalAddress;
        this.customerEmail = customerEmail;
        this.customerCodeMain = customerCodeMain;
        this.isOrganization = isOrganization;
        this.isPerson = isPerson;
    }

    /**
     * Getter for <code>purchase.customer.customer_code</code>.
     */
    public String getCustomerCode() {
        return this.customerCode;
    }

    /**
     * Getter for <code>purchase.customer.customer_name</code>.
     */
    public String getCustomerName() {
        return this.customerName;
    }

    /**
     * Getter for <code>purchase.customer.customer_inn</code>.
     */
    public String getCustomerInn() {
        return this.customerInn;
    }

    /**
     * Getter for <code>purchase.customer.customer_kpp</code>.
     */
    public String getCustomerKpp() {
        return this.customerKpp;
    }

    /**
     * Getter for <code>purchase.customer.customer_legal_address</code>.
     */
    public String getCustomerLegalAddress() {
        return this.customerLegalAddress;
    }

    /**
     * Getter for <code>purchase.customer.customer_postal_address</code>.
     */
    public String getCustomerPostalAddress() {
        return this.customerPostalAddress;
    }

    /**
     * Getter for <code>purchase.customer.customer_email</code>.
     */
    public String getCustomerEmail() {
        return this.customerEmail;
    }

    /**
     * Getter for <code>purchase.customer.customer_code_main</code>.
     */
    public String getCustomerCodeMain() {
        return this.customerCodeMain;
    }

    /**
     * Getter for <code>purchase.customer.is_organization</code>.
     */
    public Boolean getIsOrganization() {
        return this.isOrganization;
    }

    /**
     * Getter for <code>purchase.customer.is_person</code>.
     */
    public Boolean getIsPerson() {
        return this.isPerson;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Customer other = (Customer) obj;
        if (this.customerCode == null) {
            if (other.customerCode != null)
                return false;
        }
        else if (!this.customerCode.equals(other.customerCode))
            return false;
        if (this.customerName == null) {
            if (other.customerName != null)
                return false;
        }
        else if (!this.customerName.equals(other.customerName))
            return false;
        if (this.customerInn == null) {
            if (other.customerInn != null)
                return false;
        }
        else if (!this.customerInn.equals(other.customerInn))
            return false;
        if (this.customerKpp == null) {
            if (other.customerKpp != null)
                return false;
        }
        else if (!this.customerKpp.equals(other.customerKpp))
            return false;
        if (this.customerLegalAddress == null) {
            if (other.customerLegalAddress != null)
                return false;
        }
        else if (!this.customerLegalAddress.equals(other.customerLegalAddress))
            return false;
        if (this.customerPostalAddress == null) {
            if (other.customerPostalAddress != null)
                return false;
        }
        else if (!this.customerPostalAddress.equals(other.customerPostalAddress))
            return false;
        if (this.customerEmail == null) {
            if (other.customerEmail != null)
                return false;
        }
        else if (!this.customerEmail.equals(other.customerEmail))
            return false;
        if (this.customerCodeMain == null) {
            if (other.customerCodeMain != null)
                return false;
        }
        else if (!this.customerCodeMain.equals(other.customerCodeMain))
            return false;
        if (this.isOrganization == null) {
            if (other.isOrganization != null)
                return false;
        }
        else if (!this.isOrganization.equals(other.isOrganization))
            return false;
        if (this.isPerson == null) {
            if (other.isPerson != null)
                return false;
        }
        else if (!this.isPerson.equals(other.isPerson))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.customerCode == null) ? 0 : this.customerCode.hashCode());
        result = prime * result + ((this.customerName == null) ? 0 : this.customerName.hashCode());
        result = prime * result + ((this.customerInn == null) ? 0 : this.customerInn.hashCode());
        result = prime * result + ((this.customerKpp == null) ? 0 : this.customerKpp.hashCode());
        result = prime * result + ((this.customerLegalAddress == null) ? 0 : this.customerLegalAddress.hashCode());
        result = prime * result + ((this.customerPostalAddress == null) ? 0 : this.customerPostalAddress.hashCode());
        result = prime * result + ((this.customerEmail == null) ? 0 : this.customerEmail.hashCode());
        result = prime * result + ((this.customerCodeMain == null) ? 0 : this.customerCodeMain.hashCode());
        result = prime * result + ((this.isOrganization == null) ? 0 : this.isOrganization.hashCode());
        result = prime * result + ((this.isPerson == null) ? 0 : this.isPerson.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Customer (");

        sb.append(customerCode);
        sb.append(", ").append(customerName);
        sb.append(", ").append(customerInn);
        sb.append(", ").append(customerKpp);
        sb.append(", ").append(customerLegalAddress);
        sb.append(", ").append(customerPostalAddress);
        sb.append(", ").append(customerEmail);
        sb.append(", ").append(customerCodeMain);
        sb.append(", ").append(isOrganization);
        sb.append(", ").append(isPerson);

        sb.append(")");
        return sb.toString();
    }
}
